// Generated by view binder compiler. Do not edit!
package com.example.st_nobrainerquizapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.st_nobrainerquizapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemQuizBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonDeleteQuiz;

  @NonNull
  public final TextView textQuestionCount;

  @NonNull
  public final TextView textQuizTitle;

  @NonNull
  public final TextView textScore;

  private ItemQuizBinding(@NonNull CardView rootView, @NonNull Button buttonDeleteQuiz,
      @NonNull TextView textQuestionCount, @NonNull TextView textQuizTitle,
      @NonNull TextView textScore) {
    this.rootView = rootView;
    this.buttonDeleteQuiz = buttonDeleteQuiz;
    this.textQuestionCount = textQuestionCount;
    this.textQuizTitle = textQuizTitle;
    this.textScore = textScore;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemQuizBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemQuizBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_quiz, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemQuizBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete_quiz;
      Button buttonDeleteQuiz = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeleteQuiz == null) {
        break missingId;
      }

      id = R.id.text_question_count;
      TextView textQuestionCount = ViewBindings.findChildViewById(rootView, id);
      if (textQuestionCount == null) {
        break missingId;
      }

      id = R.id.text_quiz_title;
      TextView textQuizTitle = ViewBindings.findChildViewById(rootView, id);
      if (textQuizTitle == null) {
        break missingId;
      }

      id = R.id.text_score;
      TextView textScore = ViewBindings.findChildViewById(rootView, id);
      if (textScore == null) {
        break missingId;
      }

      return new ItemQuizBinding((CardView) rootView, buttonDeleteQuiz, textQuestionCount,
          textQuizTitle, textScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
