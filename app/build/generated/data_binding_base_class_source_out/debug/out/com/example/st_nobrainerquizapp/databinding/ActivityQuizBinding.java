// Generated by view binder compiler. Do not edit!
package com.example.st_nobrainerquizapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.st_nobrainerquizapp.R;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQuizBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btn0;

  @NonNull
  public final Button btn1;

  @NonNull
  public final Button btn2;

  @NonNull
  public final Button btn3;

  @NonNull
  public final Button hintBtn;

  @NonNull
  public final Button hintText;

  @NonNull
  public final Button nextBtn;

  @NonNull
  public final TextView questionIndicatorTextview;

  @NonNull
  public final LinearProgressIndicator questionProgressIndicator;

  @NonNull
  public final TextView questionTextview;

  @NonNull
  public final TextView timerIndicatorTextview;

  private ActivityQuizBinding(@NonNull LinearLayout rootView, @NonNull Button btn0,
      @NonNull Button btn1, @NonNull Button btn2, @NonNull Button btn3, @NonNull Button hintBtn,
      @NonNull Button hintText, @NonNull Button nextBtn,
      @NonNull TextView questionIndicatorTextview,
      @NonNull LinearProgressIndicator questionProgressIndicator,
      @NonNull TextView questionTextview, @NonNull TextView timerIndicatorTextview) {
    this.rootView = rootView;
    this.btn0 = btn0;
    this.btn1 = btn1;
    this.btn2 = btn2;
    this.btn3 = btn3;
    this.hintBtn = hintBtn;
    this.hintText = hintText;
    this.nextBtn = nextBtn;
    this.questionIndicatorTextview = questionIndicatorTextview;
    this.questionProgressIndicator = questionProgressIndicator;
    this.questionTextview = questionTextview;
    this.timerIndicatorTextview = timerIndicatorTextview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQuizBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQuizBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_quiz, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQuizBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn0;
      Button btn0 = ViewBindings.findChildViewById(rootView, id);
      if (btn0 == null) {
        break missingId;
      }

      id = R.id.btn1;
      Button btn1 = ViewBindings.findChildViewById(rootView, id);
      if (btn1 == null) {
        break missingId;
      }

      id = R.id.btn2;
      Button btn2 = ViewBindings.findChildViewById(rootView, id);
      if (btn2 == null) {
        break missingId;
      }

      id = R.id.btn3;
      Button btn3 = ViewBindings.findChildViewById(rootView, id);
      if (btn3 == null) {
        break missingId;
      }

      id = R.id.hint_btn;
      Button hintBtn = ViewBindings.findChildViewById(rootView, id);
      if (hintBtn == null) {
        break missingId;
      }

      id = R.id.hint_text;
      Button hintText = ViewBindings.findChildViewById(rootView, id);
      if (hintText == null) {
        break missingId;
      }

      id = R.id.next_btn;
      Button nextBtn = ViewBindings.findChildViewById(rootView, id);
      if (nextBtn == null) {
        break missingId;
      }

      id = R.id.question_indicator_textview;
      TextView questionIndicatorTextview = ViewBindings.findChildViewById(rootView, id);
      if (questionIndicatorTextview == null) {
        break missingId;
      }

      id = R.id.question_progress_indicator;
      LinearProgressIndicator questionProgressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (questionProgressIndicator == null) {
        break missingId;
      }

      id = R.id.question_textview;
      TextView questionTextview = ViewBindings.findChildViewById(rootView, id);
      if (questionTextview == null) {
        break missingId;
      }

      id = R.id.timer_indicator_textview;
      TextView timerIndicatorTextview = ViewBindings.findChildViewById(rootView, id);
      if (timerIndicatorTextview == null) {
        break missingId;
      }

      return new ActivityQuizBinding((LinearLayout) rootView, btn0, btn1, btn2, btn3, hintBtn,
          hintText, nextBtn, questionIndicatorTextview, questionProgressIndicator, questionTextview,
          timerIndicatorTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
